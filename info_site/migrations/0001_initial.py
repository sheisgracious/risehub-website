# Generated by Django 5.2.6 on 2025-10-01 13:49

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cohort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., Cohort 1 - January 2025', max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('recruiting', 'Recruiting'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planning', max_length=20)),
                ('max_students', models.IntegerField(default=15)),
                ('meeting_day', models.CharField(blank=True, help_text='e.g., Monday', max_length=20)),
                ('meeting_time', models.TimeField(blank=True, null=True)),
                ('zoom_link', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_responded', models.BooleanField(default=False)),
                ('response', models.TextField(blank=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('duration_weeks', models.IntegerField(default=6)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='GHS', max_length=3)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Webinar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('date', models.DateTimeField()),
                ('duration_minutes', models.IntegerField(default=60)),
                ('zoom_link', models.URLField()),
                ('registration_limit', models.IntegerField(default=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_number', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('quizlet_url', models.URLField(blank=True)),
                ('due_date', models.DateTimeField()),
                ('cohort', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='info_site.cohort')),
            ],
            options={
                'ordering': ['cohort', 'week_number'],
                'unique_together': {('cohort', 'week_number')},
            },
        ),
        migrations.AddField(
            model_name='cohort',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cohorts', to='info_site.course'),
        ),
        migrations.CreateModel(
            name='InstructorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('lead', 'Lead Instructor'), ('supporting', 'Supporting Facilitator'), ('admin', 'Admin/Operations'), ('marketing', 'Marketing Lead')], max_length=20)),
                ('university', models.CharField(blank=True, max_length=200)),
                ('major', models.CharField(blank=True, max_length=100)),
                ('bio', models.TextField(blank=True)),
                ('monthly_rate', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='instructor_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InterestForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=20)),
                ('age', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('how_did_you_hear', models.CharField(blank=True, choices=[('webinar', 'Free Webinar'), ('social_media', 'Social Media'), ('flyer', 'Flyer/Poster'), ('radio', 'Radio'), ('referral', 'Friend/Family Referral'), ('other', 'Other')], max_length=100)),
                ('message', models.TextField(blank=True, help_text='Questions or special requests')),
                ('contacted', models.BooleanField(default=False)),
                ('converted_to_enrollment', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('interested_course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='info_site.course')),
                ('preferred_cohort', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='info_site.cohort')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=20)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('address', models.TextField(blank=True)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20)),
                ('tech_skill_level', models.CharField(choices=[('beginner', 'Complete Beginner'), ('basic', 'Basic Understanding'), ('intermediate', 'Intermediate')], default='beginner', max_length=20)),
                ('owns_smartphone', models.BooleanField(default=False)),
                ('owns_computer', models.BooleanField(default=False)),
                ('device_type', models.CharField(blank=True, help_text='e.g., iPhone, Samsung tablet', max_length=100)),
                ('preferred_contact', models.CharField(choices=[('phone', 'Phone'), ('email', 'Email'), ('whatsapp', 'WhatsApp')], default='phone', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AssignmentSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField(default=False)),
                ('score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('notes', models.TextField(blank=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('graded_at', models.DateTimeField(blank=True, null=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='info_site.assignment')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignment_submissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('assignment', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('interested', 'Expressed Interest'), ('assessment_scheduled', 'Assessment Scheduled'), ('pending', 'Pending Payment'), ('enrolled', 'Enrolled'), ('completed', 'Completed'), ('dropped', 'Dropped'), ('cancelled', 'Cancelled')], default='interested', max_length=30)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('assessment_call_date', models.DateTimeField(blank=True, null=True)),
                ('assessment_notes', models.TextField(blank=True)),
                ('attendance_count', models.IntegerField(default=0)),
                ('assignments_completed', models.IntegerField(default=0)),
                ('enrolled_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cohort', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='info_site.cohort')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-enrolled_at'],
                'unique_together': {('student', 'cohort')},
            },
        ),
        migrations.CreateModel(
            name='CohortInstructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('lead', 'Lead Instructor'), ('supporting', 'Supporting Facilitator')], default='supporting', max_length=20)),
                ('cohort', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instructors', to='info_site.cohort')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cohort_assignments', to='info_site.instructorprofile')),
            ],
            options={
                'unique_together': {('cohort', 'instructor')},
            },
        ),
        migrations.CreateModel(
            name='WebinarRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('attended', models.BooleanField(default=False)),
                ('enrolled_after', models.BooleanField(default=False)),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('webinar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='info_site.webinar')),
            ],
            options={
                'ordering': ['-registered_at'],
                'unique_together': {('webinar', 'email')},
            },
        ),
        migrations.CreateModel(
            name='WeekCurriculum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_number', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('topics', models.TextField(help_text='One topic per line')),
                ('learning_objectives', models.TextField(blank=True)),
                ('materials_url', models.URLField(blank=True, help_text='Link to slides, resources')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='curriculum', to='info_site.course')),
            ],
            options={
                'ordering': ['course', 'week_number'],
                'unique_together': {('course', 'week_number')},
            },
        ),
    ]
